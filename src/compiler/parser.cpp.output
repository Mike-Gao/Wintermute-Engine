

Terminals which are not used:

   METHOD_KW
   RESERVED_KW
   TOKEN_ERROR


State 44 contains 1 shift/reduce conflict.
State 145 contains 1 shift/reduce conflict.
State 188 contains 1 shift/reduce conflict.
State 189 contains 1 shift/reduce conflict.
State 190 contains 1 shift/reduce conflict.
State 191 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.

Grammar
rule 1    Literal -> NULL_KW
rule 2    Literal -> TRUE_KW
rule 3    Literal -> FALSE_KW
rule 4    Literal -> NUMBER_INT
rule 5    Literal -> NUMBER_FLOAT
rule 6    Literal -> STRING
rule 7    PrimaryExpr -> THIS_KW
rule 8    PrimaryExpr -> IDENT
rule 9    PrimaryExpr -> Literal
rule 10   PrimaryExpr -> '(' Expr ')'
rule 11   MemberExpr -> PrimaryExpr
rule 12   MemberExpr -> MemberExpr '[' Expr ']'
rule 13   MemberExpr -> MemberExpr '.' IDENT
rule 14   MemberExpr -> NEW_KW MemberExpr Arguments
rule 15   NewExpr -> MemberExpr
rule 16   NewExpr -> NEW_KW NewExpr
rule 17   CallExpr -> MemberExpr Arguments
rule 18   CallExpr -> CallExpr Arguments
rule 19   CallExpr -> CallExpr '[' Expr ']'
rule 20   CallExpr -> CallExpr '.' IDENT
rule 21   Arguments -> '(' ')'
rule 22   Arguments -> '(' ArgumentList ')'
rule 23   ArgumentList -> AssignmentExpr
rule 24   ArgumentList -> ArgumentList ',' AssignmentExpr
rule 25   LeftHandSideExpr -> NewExpr
rule 26   LeftHandSideExpr -> CallExpr
rule 27   PostfixExpr -> LeftHandSideExpr
rule 28   PostfixExpr -> LeftHandSideExpr PLUSPLUS
rule 29   PostfixExpr -> LeftHandSideExpr MINUSMINUS
rule 30   UnaryExpr -> PostfixExpr
rule 31   UnaryExpr -> DELETE_KW UnaryExpr
rule 32   UnaryExpr -> VOID_KW UnaryExpr
rule 33   UnaryExpr -> TYPEOF_KW UnaryExpr
rule 34   UnaryExpr -> PLUSPLUS UnaryExpr
rule 35   UnaryExpr -> MINUSMINUS UnaryExpr
rule 36   UnaryExpr -> '+' UnaryExpr
rule 37   UnaryExpr -> '-' UnaryExpr
rule 38   UnaryExpr -> '!' UnaryExpr
rule 39   MultiplicativeExpr -> UnaryExpr
rule 40   MultiplicativeExpr -> MultiplicativeExpr '*' UnaryExpr
rule 41   MultiplicativeExpr -> MultiplicativeExpr '/' UnaryExpr
rule 42   MultiplicativeExpr -> MultiplicativeExpr '%' UnaryExpr
rule 43   AdditiveExpr -> MultiplicativeExpr
rule 44   AdditiveExpr -> AdditiveExpr '+' MultiplicativeExpr
rule 45   AdditiveExpr -> AdditiveExpr '-' MultiplicativeExpr
rule 46   RelationalExpr -> AdditiveExpr
rule 47   RelationalExpr -> RelationalExpr '<' AdditiveExpr
rule 48   RelationalExpr -> RelationalExpr '>' AdditiveExpr
rule 49   RelationalExpr -> RelationalExpr LE AdditiveExpr
rule 50   RelationalExpr -> RelationalExpr GE AdditiveExpr
rule 51   RelationalExpr -> RelationalExpr IN_KW AdditiveExpr
rule 52   EqualityExpr -> RelationalExpr
rule 53   EqualityExpr -> EqualityExpr EQEQ RelationalExpr
rule 54   EqualityExpr -> EqualityExpr NE RelationalExpr
rule 55   EqualityExpr -> EqualityExpr STREQ RelationalExpr
rule 56   EqualityExpr -> EqualityExpr STRNEQ RelationalExpr
rule 57   LogicalANDExpr -> EqualityExpr
rule 58   LogicalANDExpr -> LogicalANDExpr AND_KW EqualityExpr
rule 59   LogicalORExpr -> LogicalANDExpr
rule 60   LogicalORExpr -> LogicalORExpr OR_KW LogicalANDExpr
rule 61   ConditionalExpr -> LogicalORExpr
rule 62   ConditionalExpr -> LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
rule 63   AssignmentExpr -> ConditionalExpr
rule 64   AssignmentExpr -> LeftHandSideExpr AssignmentOperator AssignmentExpr
rule 65   AssignmentOperator -> '='
rule 66   AssignmentOperator -> PLUSEQUAL
rule 67   AssignmentOperator -> MINUSEQUAL
rule 68   AssignmentOperator -> MULTEQUAL
rule 69   AssignmentOperator -> DIVEQUAL
rule 70   AssignmentOperator -> MODEQUAL
rule 71   Expr -> AssignmentExpr
rule 72   Expr -> Expr ',' AssignmentExpr
rule 73   Statement -> Block
rule 74   Statement -> VariableStatement
rule 75   Statement -> GlobalStatement
rule 76   Statement -> ConstStatement
rule 77   Statement -> EmptyStatement
rule 78   Statement -> ExprStatement
rule 79   Statement -> IfStatement
rule 80   Statement -> IterationStatement
rule 81   Statement -> ContinueStatement
rule 82   Statement -> BreakStatement
rule 83   Statement -> ReturnStatement
rule 84   Statement -> WithStatement
rule 85   Statement -> SwitchStatement
rule 86   Statement -> LabelledStatement
rule 87   Block -> '{' '}'
rule 88   Block -> '{' SourceElements '}'
rule 89   StatementList -> Statement
rule 90   StatementList -> StatementList Statement
rule 91   VariableStatement -> VAR_KW VariableDeclarationList ';'
rule 92   VariableDeclarationList -> VariableDeclaration
rule 93   VariableDeclarationList -> VariableDeclarationList ',' VariableDeclaration
rule 94   VariableDeclaration -> IDENT
rule 95   VariableDeclaration -> IDENT Initializer
rule 96   GlobalStatement -> GLOBAL_KW GlobalDeclarationList ';'
rule 97   GlobalDeclarationList -> GlobalDeclaration
rule 98   GlobalDeclarationList -> GlobalDeclarationList ',' VariableDeclaration
rule 99   GlobalDeclaration -> IDENT
rule 100  GlobalDeclaration -> IDENT Initializer
rule 101  ConstStatement -> CONST_KW ConstDeclarationList ';'
rule 102  ConstDeclarationList -> ConstDeclaration
rule 103  ConstDeclarationList -> ConstDeclarationList ',' VariableDeclaration
rule 104  ConstDeclaration -> IDENT
rule 105  ConstDeclaration -> IDENT Initializer
rule 106  Initializer -> '=' AssignmentExpr
rule 107  EmptyStatement -> ';'
rule 108  ExprStatement -> Expr ';'
rule 109  IfStatement -> IF_KW '(' Expr ')' Statement
rule 110  IfStatement -> IF_KW '(' Expr ')' Statement ELSE_KW Statement
rule 111  IterationStatement -> DO_KW Statement WHILE_KW '(' Expr ')'
rule 112  IterationStatement -> WHILE_KW '(' Expr ')' Statement
rule 113  IterationStatement -> FOR_KW '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
rule 114  IterationStatement -> FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
rule 115  IterationStatement -> FOR_KW '(' LeftHandSideExpr IN_KW Expr ')' Statement
rule 116  IterationStatement -> FOR_KW '(' VAR_KW IDENT IN_KW Expr ')' Statement
rule 117  IterationStatement -> FOR_KW '(' VAR_KW IDENT Initializer IN_KW Expr ')' Statement
rule 118  ExprOpt ->		/* empty */
rule 119  ExprOpt -> Expr
rule 120  ContinueStatement -> CONTINUE_KW ';'
rule 121  ContinueStatement -> CONTINUE_KW IDENT ';'
rule 122  BreakStatement -> BREAK_KW ';'
rule 123  BreakStatement -> BREAK_KW IDENT ';'
rule 124  ReturnStatement -> RETURN_KW ';'
rule 125  ReturnStatement -> RETURN_KW Expr ';'
rule 126  WithStatement -> WITH_KW '(' Expr ')' Statement
rule 127  SwitchStatement -> SWITCH_KW '(' Expr ')' CaseBlock
rule 128  CaseBlock -> '{' CaseClausesOpt '}'
rule 129  CaseBlock -> '{' CaseClausesOpt DefaultClause CaseClausesOpt '}'
rule 130  CaseClausesOpt ->		/* empty */
rule 131  CaseClausesOpt -> CaseClauses
rule 132  CaseClauses -> CaseClause
rule 133  CaseClauses -> CaseClauses CaseClause
rule 134  CaseClause -> CASE_KW Expr ':'
rule 135  CaseClause -> CASE_KW Expr ':' StatementList
rule 136  DefaultClause -> DEFAULT_KW ':'
rule 137  DefaultClause -> DEFAULT_KW ':' StatementList
rule 138  LabelledStatement -> IDENT ':' Statement
rule 139  FunctionDeclaration -> FUNCTION_KW IDENT '(' ')' FunctionBody
rule 140  FunctionDeclaration -> FUNCTION_KW IDENT '(' FormalParameterList ')' FunctionBody
rule 141  FormalParameterList -> IDENT
rule 142  FormalParameterList -> FormalParameterList ',' IDENT
rule 143  FunctionBody -> '{' '}'
rule 144  FunctionBody -> '{' SourceElements '}'
rule 145  Program ->		/* empty */
rule 146  Program -> SourceElements
rule 147  SourceElements -> SourceElement
rule 148  SourceElements -> SourceElements SourceElement
rule 149  SourceElement -> Statement
rule 150  SourceElement -> FunctionDeclaration

Terminals, with rules where they appear

$ (-1)
'!' (33) 38
'%' (37) 42
'(' (40) 10 21 22 109 110 111 112 113 114 115 116 117 126 127 139 140
')' (41) 10 21 22 109 110 111 112 113 114 115 116 117 126 127 139 140
'*' (42) 40
'+' (43) 36 44
',' (44) 24 72 93 98 103 142
'-' (45) 37 45
'.' (46) 13 20
'/' (47) 41
':' (58) 62 134 135 136 137 138
';' (59) 91 96 101 107 108 113 114 120 121 122 123 124 125
'<' (60) 47
'=' (61) 65 106
'>' (62) 48
'?' (63) 62
'[' (91) 12 19
']' (93) 12 19
'{' (123) 87 88 128 129 143 144
'}' (125) 87 88 128 129 143 144
error (256)
NULL_KW (258) 1
TRUE_KW (259) 2
FALSE_KW (260) 3
STRING (261) 6
NUMBER_INT (262) 4
NUMBER_FLOAT (263) 5
BREAK_KW (264) 122 123
CASE_KW (265) 134 135
DEFAULT_KW (266) 136 137
FOR_KW (267) 113 114 115 116 117
NEW_KW (268) 14 16
VAR_KW (269) 91 114 116 117
GLOBAL_KW (270) 96
CONST_KW (271) 101
CONTINUE_KW (272) 120 121
FUNCTION_KW (273) 139 140
METHOD_KW (274)
RETURN_KW (275) 124 125
VOID_KW (276) 32
DELETE_KW (277) 31
IF_KW (278) 109 110
THIS_KW (279) 7
DO_KW (280) 111
WHILE_KW (281) 111 112
ELSE_KW (282) 110
IN_KW (283) 51 115 116 117
TYPEOF_KW (284) 33
SWITCH_KW (285) 127
WITH_KW (286) 126
RESERVED_KW (287)
EQEQ (288) 53
NE (289) 54
STREQ (290) 55
STRNEQ (291) 56
LE (292) 49
GE (293) 50
OR_KW (294) 60
AND_KW (295) 58
PLUSPLUS (296) 28 34
MINUSMINUS (297) 29 35
PLUSEQUAL (298) 66
MINUSEQUAL (299) 67
MULTEQUAL (300) 68
DIVEQUAL (301) 69
MODEQUAL (302) 70
TOKEN_ERROR (303)
IDENT (304) 8 13 20 94 95 99 100 104 105 116 117 121 123 138 139 140
    141 142

Nonterminals, with rules where they appear

Literal (70)
    on left: 1 2 3 4 5 6, on right: 9
PrimaryExpr (71)
    on left: 7 8 9 10, on right: 11
MemberExpr (72)
    on left: 11 12 13 14, on right: 12 13 14 15 17
NewExpr (73)
    on left: 15 16, on right: 16 25
CallExpr (74)
    on left: 17 18 19 20, on right: 18 19 20 26
Arguments (75)
    on left: 21 22, on right: 14 17 18
ArgumentList (76)
    on left: 23 24, on right: 22 24
LeftHandSideExpr (77)
    on left: 25 26, on right: 27 28 29 64 115
PostfixExpr (78)
    on left: 27 28 29, on right: 30
UnaryExpr (79)
    on left: 30 31 32 33 34 35 36 37 38, on right: 31 32 33 34 35 36
    37 38 39 40 41 42
MultiplicativeExpr (80)
    on left: 39 40 41 42, on right: 40 41 42 43 44 45
AdditiveExpr (81)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50 51
RelationalExpr (82)
    on left: 46 47 48 49 50 51, on right: 47 48 49 50 51 52 53 54 55
    56
EqualityExpr (83)
    on left: 52 53 54 55 56, on right: 53 54 55 56 57 58
LogicalANDExpr (84)
    on left: 57 58, on right: 58 59 60
LogicalORExpr (85)
    on left: 59 60, on right: 60 61 62
ConditionalExpr (86)
    on left: 61 62, on right: 63
AssignmentExpr (87)
    on left: 63 64, on right: 23 24 62 64 71 72 106
AssignmentOperator (88)
    on left: 65 66 67 68 69 70, on right: 64
Expr (89)
    on left: 71 72, on right: 10 12 19 72 108 109 110 111 112 115 116
    117 119 125 126 127 134 135
Statement (90)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86,
    on right: 89 90 109 110 111 112 113 114 115 116 117 126 138 149
Block (91)
    on left: 87 88, on right: 73
StatementList (92)
    on left: 89 90, on right: 90 135 137
VariableStatement (93)
    on left: 91, on right: 74
VariableDeclarationList (94)
    on left: 92 93, on right: 91 93 114
VariableDeclaration (95)
    on left: 94 95, on right: 92 93 98 103
GlobalStatement (96)
    on left: 96, on right: 75
GlobalDeclarationList (97)
    on left: 97 98, on right: 96 98
GlobalDeclaration (98)
    on left: 99 100, on right: 97
ConstStatement (99)
    on left: 101, on right: 76
ConstDeclarationList (100)
    on left: 102 103, on right: 101 103
ConstDeclaration (101)
    on left: 104 105, on right: 102
Initializer (102)
    on left: 106, on right: 95 100 105 117
EmptyStatement (103)
    on left: 107, on right: 77
ExprStatement (104)
    on left: 108, on right: 78
IfStatement (105)
    on left: 109 110, on right: 79
IterationStatement (106)
    on left: 111 112 113 114 115 116 117, on right: 80
ExprOpt (107)
    on left: 118 119, on right: 113 114
ContinueStatement (108)
    on left: 120 121, on right: 81
BreakStatement (109)
    on left: 122 123, on right: 82
ReturnStatement (110)
    on left: 124 125, on right: 83
WithStatement (111)
    on left: 126, on right: 84
SwitchStatement (112)
    on left: 127, on right: 85
CaseBlock (113)
    on left: 128 129, on right: 127
CaseClausesOpt (114)
    on left: 130 131, on right: 128 129
CaseClauses (115)
    on left: 132 133, on right: 131 133
CaseClause (116)
    on left: 134 135, on right: 132 133
DefaultClause (117)
    on left: 136 137, on right: 129
LabelledStatement (118)
    on left: 138, on right: 86
FunctionDeclaration (119)
    on left: 139 140, on right: 150
FormalParameterList (120)
    on left: 141 142, on right: 140 142
FunctionBody (121)
    on left: 143 144, on right: 139 140
Program (122)
    on left: 145 146
SourceElements (123)
    on left: 147 148, on right: 88 144 146 148
SourceElement (124)
    on left: 149 150, on right: 147 148


state 0

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 145 (Program)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    Program	go to state 277
    SourceElements	go to state 67
    SourceElement	go to state 68



state 1

    Literal  ->  NULL_KW .   (rule 1)

    $default	reduce using rule 1 (Literal)



state 2

    Literal  ->  TRUE_KW .   (rule 2)

    $default	reduce using rule 2 (Literal)



state 3

    Literal  ->  FALSE_KW .   (rule 3)

    $default	reduce using rule 3 (Literal)



state 4

    Literal  ->  STRING .   (rule 6)

    $default	reduce using rule 6 (Literal)



state 5

    Literal  ->  NUMBER_INT .   (rule 4)

    $default	reduce using rule 4 (Literal)



state 6

    Literal  ->  NUMBER_FLOAT .   (rule 5)

    $default	reduce using rule 5 (Literal)



state 7

    BreakStatement  ->  BREAK_KW . ';'   (rule 122)
    BreakStatement  ->  BREAK_KW . IDENT ';'   (rule 123)

    IDENT	shift, and go to state 69
    ';' 	shift, and go to state 70



state 8

    IterationStatement  ->  FOR_KW . '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement   (rule 113)
    IterationStatement  ->  FOR_KW . '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement   (rule 114)
    IterationStatement  ->  FOR_KW . '(' LeftHandSideExpr IN_KW Expr ')' Statement   (rule 115)
    IterationStatement  ->  FOR_KW . '(' VAR_KW IDENT IN_KW Expr ')' Statement   (rule 116)
    IterationStatement  ->  FOR_KW . '(' VAR_KW IDENT Initializer IN_KW Expr ')' Statement   (rule 117)

    '(' 	shift, and go to state 71



state 9

    MemberExpr  ->  NEW_KW . MemberExpr Arguments   (rule 14)
    NewExpr  ->  NEW_KW . NewExpr   (rule 16)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    THIS_KW	shift, and go to state 19
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 73
    NewExpr	go to state 74



state 10

    VariableStatement  ->  VAR_KW . VariableDeclarationList ';'   (rule 91)

    IDENT	shift, and go to state 75

    VariableDeclarationList	go to state 76
    VariableDeclaration	go to state 77



state 11

    GlobalStatement  ->  GLOBAL_KW . GlobalDeclarationList ';'   (rule 96)

    IDENT	shift, and go to state 78

    GlobalDeclarationList	go to state 79
    GlobalDeclaration	go to state 80



state 12

    ConstStatement  ->  CONST_KW . ConstDeclarationList ';'   (rule 101)

    IDENT	shift, and go to state 81

    ConstDeclarationList	go to state 82
    ConstDeclaration	go to state 83



state 13

    ContinueStatement  ->  CONTINUE_KW . ';'   (rule 120)
    ContinueStatement  ->  CONTINUE_KW . IDENT ';'   (rule 121)

    IDENT	shift, and go to state 84
    ';' 	shift, and go to state 85



state 14

    FunctionDeclaration  ->  FUNCTION_KW . IDENT '(' ')' FunctionBody   (rule 139)
    FunctionDeclaration  ->  FUNCTION_KW . IDENT '(' FormalParameterList ')' FunctionBody   (rule 140)

    IDENT	shift, and go to state 86



state 15

    ReturnStatement  ->  RETURN_KW . ';'   (rule 124)
    ReturnStatement  ->  RETURN_KW . Expr ';'   (rule 125)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    ';' 	shift, and go to state 87

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 88



state 16

    UnaryExpr  ->  VOID_KW . UnaryExpr   (rule 32)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 90



state 17

    UnaryExpr  ->  DELETE_KW . UnaryExpr   (rule 31)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 91



state 18

    IfStatement  ->  IF_KW . '(' Expr ')' Statement   (rule 109)
    IfStatement  ->  IF_KW . '(' Expr ')' Statement ELSE_KW Statement   (rule 110)

    '(' 	shift, and go to state 92



state 19

    PrimaryExpr  ->  THIS_KW .   (rule 7)

    $default	reduce using rule 7 (PrimaryExpr)



state 20

    IterationStatement  ->  DO_KW . Statement WHILE_KW '(' Expr ')'   (rule 111)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 93
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 21

    IterationStatement  ->  WHILE_KW . '(' Expr ')' Statement   (rule 112)

    '(' 	shift, and go to state 94



state 22

    UnaryExpr  ->  TYPEOF_KW . UnaryExpr   (rule 33)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 95



state 23

    SwitchStatement  ->  SWITCH_KW . '(' Expr ')' CaseBlock   (rule 127)

    '(' 	shift, and go to state 96



state 24

    WithStatement  ->  WITH_KW . '(' Expr ')' Statement   (rule 126)

    '(' 	shift, and go to state 97



state 25

    UnaryExpr  ->  PLUSPLUS . UnaryExpr   (rule 34)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 98



state 26

    UnaryExpr  ->  MINUSMINUS . UnaryExpr   (rule 35)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 99



state 27

    PrimaryExpr  ->  IDENT .   (rule 8)
    LabelledStatement  ->  IDENT . ':' Statement   (rule 138)

    ':' 	shift, and go to state 100

    $default	reduce using rule 8 (PrimaryExpr)



state 28

    PrimaryExpr  ->  '(' . Expr ')'   (rule 10)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 101



state 29

    UnaryExpr  ->  '+' . UnaryExpr   (rule 36)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 102



state 30

    UnaryExpr  ->  '-' . UnaryExpr   (rule 37)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 103



state 31

    UnaryExpr  ->  '!' . UnaryExpr   (rule 38)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 104



state 32

    Block  ->  '{' . '}'   (rule 87)
    Block  ->  '{' . SourceElements '}'   (rule 88)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    '}' 	shift, and go to state 105
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    SourceElements	go to state 106
    SourceElement	go to state 68



state 33

    EmptyStatement  ->  ';' .   (rule 107)

    $default	reduce using rule 107 (EmptyStatement)



state 34

    PrimaryExpr  ->  Literal .   (rule 9)

    $default	reduce using rule 9 (PrimaryExpr)



state 35

    MemberExpr  ->  PrimaryExpr .   (rule 11)

    $default	reduce using rule 11 (MemberExpr)



state 36

    MemberExpr  ->  MemberExpr . '[' Expr ']'   (rule 12)
    MemberExpr  ->  MemberExpr . '.' IDENT   (rule 13)
    NewExpr  ->  MemberExpr .   (rule 15)
    CallExpr  ->  MemberExpr . Arguments   (rule 17)

    '(' 	shift, and go to state 107
    '[' 	shift, and go to state 108
    '.' 	shift, and go to state 109

    $default	reduce using rule 15 (NewExpr)

    Arguments	go to state 110



state 37

    LeftHandSideExpr  ->  NewExpr .   (rule 25)

    $default	reduce using rule 25 (LeftHandSideExpr)



state 38

    CallExpr  ->  CallExpr . Arguments   (rule 18)
    CallExpr  ->  CallExpr . '[' Expr ']'   (rule 19)
    CallExpr  ->  CallExpr . '.' IDENT   (rule 20)
    LeftHandSideExpr  ->  CallExpr .   (rule 26)

    '(' 	shift, and go to state 107
    '[' 	shift, and go to state 111
    '.' 	shift, and go to state 112

    $default	reduce using rule 26 (LeftHandSideExpr)

    Arguments	go to state 113



state 39

    PostfixExpr  ->  LeftHandSideExpr .   (rule 27)
    PostfixExpr  ->  LeftHandSideExpr . PLUSPLUS   (rule 28)
    PostfixExpr  ->  LeftHandSideExpr . MINUSMINUS   (rule 29)
    AssignmentExpr  ->  LeftHandSideExpr . AssignmentOperator AssignmentExpr   (rule 64)

    PLUSPLUS	shift, and go to state 114
    MINUSMINUS	shift, and go to state 115
    PLUSEQUAL	shift, and go to state 116
    MINUSEQUAL	shift, and go to state 117
    MULTEQUAL	shift, and go to state 118
    DIVEQUAL	shift, and go to state 119
    MODEQUAL	shift, and go to state 120
    '=' 	shift, and go to state 121

    $default	reduce using rule 27 (PostfixExpr)

    AssignmentOperator	go to state 122



state 40

    UnaryExpr  ->  PostfixExpr .   (rule 30)

    $default	reduce using rule 30 (UnaryExpr)



state 41

    MultiplicativeExpr  ->  UnaryExpr .   (rule 39)

    $default	reduce using rule 39 (MultiplicativeExpr)



state 42

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 40)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 41)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 42)
    AdditiveExpr  ->  MultiplicativeExpr .   (rule 43)

    '*' 	shift, and go to state 123
    '/' 	shift, and go to state 124
    '%' 	shift, and go to state 125

    $default	reduce using rule 43 (AdditiveExpr)



state 43

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  AdditiveExpr .   (rule 46)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 46 (RelationalExpr)



state 44

    RelationalExpr  ->  RelationalExpr . '<' AdditiveExpr   (rule 47)
    RelationalExpr  ->  RelationalExpr . '>' AdditiveExpr   (rule 48)
    RelationalExpr  ->  RelationalExpr . LE AdditiveExpr   (rule 49)
    RelationalExpr  ->  RelationalExpr . GE AdditiveExpr   (rule 50)
    RelationalExpr  ->  RelationalExpr . IN_KW AdditiveExpr   (rule 51)
    EqualityExpr  ->  RelationalExpr .   (rule 52)

    IN_KW	shift, and go to state 128
    LE  	shift, and go to state 129
    GE  	shift, and go to state 130
    '<' 	shift, and go to state 131
    '>' 	shift, and go to state 132

    IN_KW	[reduce using rule 52 (EqualityExpr)]
    $default	reduce using rule 52 (EqualityExpr)



state 45

    EqualityExpr  ->  EqualityExpr . EQEQ RelationalExpr   (rule 53)
    EqualityExpr  ->  EqualityExpr . NE RelationalExpr   (rule 54)
    EqualityExpr  ->  EqualityExpr . STREQ RelationalExpr   (rule 55)
    EqualityExpr  ->  EqualityExpr . STRNEQ RelationalExpr   (rule 56)
    LogicalANDExpr  ->  EqualityExpr .   (rule 57)

    EQEQ	shift, and go to state 133
    NE  	shift, and go to state 134
    STREQ	shift, and go to state 135
    STRNEQ	shift, and go to state 136

    $default	reduce using rule 57 (LogicalANDExpr)



state 46

    LogicalANDExpr  ->  LogicalANDExpr . AND_KW EqualityExpr   (rule 58)
    LogicalORExpr  ->  LogicalANDExpr .   (rule 59)

    AND_KW	shift, and go to state 137

    $default	reduce using rule 59 (LogicalORExpr)



state 47

    LogicalORExpr  ->  LogicalORExpr . OR_KW LogicalANDExpr   (rule 60)
    ConditionalExpr  ->  LogicalORExpr .   (rule 61)
    ConditionalExpr  ->  LogicalORExpr . '?' AssignmentExpr ':' AssignmentExpr   (rule 62)

    OR_KW	shift, and go to state 138
    '?' 	shift, and go to state 139

    $default	reduce using rule 61 (ConditionalExpr)



state 48

    AssignmentExpr  ->  ConditionalExpr .   (rule 63)

    $default	reduce using rule 63 (AssignmentExpr)



state 49

    Expr  ->  AssignmentExpr .   (rule 71)

    $default	reduce using rule 71 (Expr)



state 50

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    ExprStatement  ->  Expr . ';'   (rule 108)

    ',' 	shift, and go to state 140
    ';' 	shift, and go to state 141



state 51

    SourceElement  ->  Statement .   (rule 149)

    $default	reduce using rule 149 (SourceElement)



state 52

    Statement  ->  Block .   (rule 73)

    $default	reduce using rule 73 (Statement)



state 53

    Statement  ->  VariableStatement .   (rule 74)

    $default	reduce using rule 74 (Statement)



state 54

    Statement  ->  GlobalStatement .   (rule 75)

    $default	reduce using rule 75 (Statement)



state 55

    Statement  ->  ConstStatement .   (rule 76)

    $default	reduce using rule 76 (Statement)



state 56

    Statement  ->  EmptyStatement .   (rule 77)

    $default	reduce using rule 77 (Statement)



state 57

    Statement  ->  ExprStatement .   (rule 78)

    $default	reduce using rule 78 (Statement)



state 58

    Statement  ->  IfStatement .   (rule 79)

    $default	reduce using rule 79 (Statement)



state 59

    Statement  ->  IterationStatement .   (rule 80)

    $default	reduce using rule 80 (Statement)



state 60

    Statement  ->  ContinueStatement .   (rule 81)

    $default	reduce using rule 81 (Statement)



state 61

    Statement  ->  BreakStatement .   (rule 82)

    $default	reduce using rule 82 (Statement)



state 62

    Statement  ->  ReturnStatement .   (rule 83)

    $default	reduce using rule 83 (Statement)



state 63

    Statement  ->  WithStatement .   (rule 84)

    $default	reduce using rule 84 (Statement)



state 64

    Statement  ->  SwitchStatement .   (rule 85)

    $default	reduce using rule 85 (Statement)



state 65

    Statement  ->  LabelledStatement .   (rule 86)

    $default	reduce using rule 86 (Statement)



state 66

    SourceElement  ->  FunctionDeclaration .   (rule 150)

    $default	reduce using rule 150 (SourceElement)



state 67

    Program  ->  SourceElements .   (rule 146)
    SourceElements  ->  SourceElements . SourceElement   (rule 148)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 146 (Program)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    SourceElement	go to state 142



state 68

    SourceElements  ->  SourceElement .   (rule 147)

    $default	reduce using rule 147 (SourceElements)



state 69

    BreakStatement  ->  BREAK_KW IDENT . ';'   (rule 123)

    ';' 	shift, and go to state 143



state 70

    BreakStatement  ->  BREAK_KW ';' .   (rule 122)

    $default	reduce using rule 122 (BreakStatement)



state 71

    IterationStatement  ->  FOR_KW '(' . ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement   (rule 113)
    IterationStatement  ->  FOR_KW '(' . VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement   (rule 114)
    IterationStatement  ->  FOR_KW '(' . LeftHandSideExpr IN_KW Expr ')' Statement   (rule 115)
    IterationStatement  ->  FOR_KW '(' . VAR_KW IDENT IN_KW Expr ')' Statement   (rule 116)
    IterationStatement  ->  FOR_KW '(' . VAR_KW IDENT Initializer IN_KW Expr ')' Statement   (rule 117)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 144
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    $default	reduce using rule 118 (ExprOpt)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 145
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 146
    ExprOpt	go to state 147



state 72

    PrimaryExpr  ->  IDENT .   (rule 8)

    $default	reduce using rule 8 (PrimaryExpr)



state 73

    MemberExpr  ->  MemberExpr . '[' Expr ']'   (rule 12)
    MemberExpr  ->  MemberExpr . '.' IDENT   (rule 13)
    MemberExpr  ->  NEW_KW MemberExpr . Arguments   (rule 14)
    NewExpr  ->  MemberExpr .   (rule 15)

    '(' 	shift, and go to state 107
    '[' 	shift, and go to state 108
    '.' 	shift, and go to state 109

    $default	reduce using rule 15 (NewExpr)

    Arguments	go to state 148



state 74

    NewExpr  ->  NEW_KW NewExpr .   (rule 16)

    $default	reduce using rule 16 (NewExpr)



state 75

    VariableDeclaration  ->  IDENT .   (rule 94)
    VariableDeclaration  ->  IDENT . Initializer   (rule 95)

    '=' 	shift, and go to state 149

    $default	reduce using rule 94 (VariableDeclaration)

    Initializer	go to state 150



state 76

    VariableStatement  ->  VAR_KW VariableDeclarationList . ';'   (rule 91)
    VariableDeclarationList  ->  VariableDeclarationList . ',' VariableDeclaration   (rule 93)

    ',' 	shift, and go to state 151
    ';' 	shift, and go to state 152



state 77

    VariableDeclarationList  ->  VariableDeclaration .   (rule 92)

    $default	reduce using rule 92 (VariableDeclarationList)



state 78

    GlobalDeclaration  ->  IDENT .   (rule 99)
    GlobalDeclaration  ->  IDENT . Initializer   (rule 100)

    '=' 	shift, and go to state 149

    $default	reduce using rule 99 (GlobalDeclaration)

    Initializer	go to state 153



state 79

    GlobalStatement  ->  GLOBAL_KW GlobalDeclarationList . ';'   (rule 96)
    GlobalDeclarationList  ->  GlobalDeclarationList . ',' VariableDeclaration   (rule 98)

    ',' 	shift, and go to state 154
    ';' 	shift, and go to state 155



state 80

    GlobalDeclarationList  ->  GlobalDeclaration .   (rule 97)

    $default	reduce using rule 97 (GlobalDeclarationList)



state 81

    ConstDeclaration  ->  IDENT .   (rule 104)
    ConstDeclaration  ->  IDENT . Initializer   (rule 105)

    '=' 	shift, and go to state 149

    $default	reduce using rule 104 (ConstDeclaration)

    Initializer	go to state 156



state 82

    ConstStatement  ->  CONST_KW ConstDeclarationList . ';'   (rule 101)
    ConstDeclarationList  ->  ConstDeclarationList . ',' VariableDeclaration   (rule 103)

    ',' 	shift, and go to state 157
    ';' 	shift, and go to state 158



state 83

    ConstDeclarationList  ->  ConstDeclaration .   (rule 102)

    $default	reduce using rule 102 (ConstDeclarationList)



state 84

    ContinueStatement  ->  CONTINUE_KW IDENT . ';'   (rule 121)

    ';' 	shift, and go to state 159



state 85

    ContinueStatement  ->  CONTINUE_KW ';' .   (rule 120)

    $default	reduce using rule 120 (ContinueStatement)



state 86

    FunctionDeclaration  ->  FUNCTION_KW IDENT . '(' ')' FunctionBody   (rule 139)
    FunctionDeclaration  ->  FUNCTION_KW IDENT . '(' FormalParameterList ')' FunctionBody   (rule 140)

    '(' 	shift, and go to state 160



state 87

    ReturnStatement  ->  RETURN_KW ';' .   (rule 124)

    $default	reduce using rule 124 (ReturnStatement)



state 88

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    ReturnStatement  ->  RETURN_KW Expr . ';'   (rule 125)

    ',' 	shift, and go to state 140
    ';' 	shift, and go to state 161



state 89

    PostfixExpr  ->  LeftHandSideExpr .   (rule 27)
    PostfixExpr  ->  LeftHandSideExpr . PLUSPLUS   (rule 28)
    PostfixExpr  ->  LeftHandSideExpr . MINUSMINUS   (rule 29)

    PLUSPLUS	shift, and go to state 114
    MINUSMINUS	shift, and go to state 115

    $default	reduce using rule 27 (PostfixExpr)



state 90

    UnaryExpr  ->  VOID_KW UnaryExpr .   (rule 32)

    $default	reduce using rule 32 (UnaryExpr)



state 91

    UnaryExpr  ->  DELETE_KW UnaryExpr .   (rule 31)

    $default	reduce using rule 31 (UnaryExpr)



state 92

    IfStatement  ->  IF_KW '(' . Expr ')' Statement   (rule 109)
    IfStatement  ->  IF_KW '(' . Expr ')' Statement ELSE_KW Statement   (rule 110)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 162



state 93

    IterationStatement  ->  DO_KW Statement . WHILE_KW '(' Expr ')'   (rule 111)

    WHILE_KW	shift, and go to state 163



state 94

    IterationStatement  ->  WHILE_KW '(' . Expr ')' Statement   (rule 112)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 164



state 95

    UnaryExpr  ->  TYPEOF_KW UnaryExpr .   (rule 33)

    $default	reduce using rule 33 (UnaryExpr)



state 96

    SwitchStatement  ->  SWITCH_KW '(' . Expr ')' CaseBlock   (rule 127)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 165



state 97

    WithStatement  ->  WITH_KW '(' . Expr ')' Statement   (rule 126)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 166



state 98

    UnaryExpr  ->  PLUSPLUS UnaryExpr .   (rule 34)

    $default	reduce using rule 34 (UnaryExpr)



state 99

    UnaryExpr  ->  MINUSMINUS UnaryExpr .   (rule 35)

    $default	reduce using rule 35 (UnaryExpr)



state 100

    LabelledStatement  ->  IDENT ':' . Statement   (rule 138)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 167
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 101

    PrimaryExpr  ->  '(' Expr . ')'   (rule 10)
    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)

    ')' 	shift, and go to state 168
    ',' 	shift, and go to state 140



state 102

    UnaryExpr  ->  '+' UnaryExpr .   (rule 36)

    $default	reduce using rule 36 (UnaryExpr)



state 103

    UnaryExpr  ->  '-' UnaryExpr .   (rule 37)

    $default	reduce using rule 37 (UnaryExpr)



state 104

    UnaryExpr  ->  '!' UnaryExpr .   (rule 38)

    $default	reduce using rule 38 (UnaryExpr)



state 105

    Block  ->  '{' '}' .   (rule 87)

    $default	reduce using rule 87 (Block)



state 106

    Block  ->  '{' SourceElements . '}'   (rule 88)
    SourceElements  ->  SourceElements . SourceElement   (rule 148)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    '}' 	shift, and go to state 169
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    SourceElement	go to state 142



state 107

    Arguments  ->  '(' . ')'   (rule 21)
    Arguments  ->  '(' . ArgumentList ')'   (rule 22)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    ')' 	shift, and go to state 170
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    ArgumentList	go to state 171
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 172



state 108

    MemberExpr  ->  MemberExpr '[' . Expr ']'   (rule 12)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 173



state 109

    MemberExpr  ->  MemberExpr '.' . IDENT   (rule 13)

    IDENT	shift, and go to state 174



state 110

    CallExpr  ->  MemberExpr Arguments .   (rule 17)

    $default	reduce using rule 17 (CallExpr)



state 111

    CallExpr  ->  CallExpr '[' . Expr ']'   (rule 19)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 175



state 112

    CallExpr  ->  CallExpr '.' . IDENT   (rule 20)

    IDENT	shift, and go to state 176



state 113

    CallExpr  ->  CallExpr Arguments .   (rule 18)

    $default	reduce using rule 18 (CallExpr)



state 114

    PostfixExpr  ->  LeftHandSideExpr PLUSPLUS .   (rule 28)

    $default	reduce using rule 28 (PostfixExpr)



state 115

    PostfixExpr  ->  LeftHandSideExpr MINUSMINUS .   (rule 29)

    $default	reduce using rule 29 (PostfixExpr)



state 116

    AssignmentOperator  ->  PLUSEQUAL .   (rule 66)

    $default	reduce using rule 66 (AssignmentOperator)



state 117

    AssignmentOperator  ->  MINUSEQUAL .   (rule 67)

    $default	reduce using rule 67 (AssignmentOperator)



state 118

    AssignmentOperator  ->  MULTEQUAL .   (rule 68)

    $default	reduce using rule 68 (AssignmentOperator)



state 119

    AssignmentOperator  ->  DIVEQUAL .   (rule 69)

    $default	reduce using rule 69 (AssignmentOperator)



state 120

    AssignmentOperator  ->  MODEQUAL .   (rule 70)

    $default	reduce using rule 70 (AssignmentOperator)



state 121

    AssignmentOperator  ->  '=' .   (rule 65)

    $default	reduce using rule 65 (AssignmentOperator)



state 122

    AssignmentExpr  ->  LeftHandSideExpr AssignmentOperator . AssignmentExpr   (rule 64)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 177



state 123

    MultiplicativeExpr  ->  MultiplicativeExpr '*' . UnaryExpr   (rule 40)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 178



state 124

    MultiplicativeExpr  ->  MultiplicativeExpr '/' . UnaryExpr   (rule 41)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 179



state 125

    MultiplicativeExpr  ->  MultiplicativeExpr '%' . UnaryExpr   (rule 42)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 180



state 126

    AdditiveExpr  ->  AdditiveExpr '+' . MultiplicativeExpr   (rule 44)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 181



state 127

    AdditiveExpr  ->  AdditiveExpr '-' . MultiplicativeExpr   (rule 45)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 182



state 128

    RelationalExpr  ->  RelationalExpr IN_KW . AdditiveExpr   (rule 51)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 183



state 129

    RelationalExpr  ->  RelationalExpr LE . AdditiveExpr   (rule 49)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 184



state 130

    RelationalExpr  ->  RelationalExpr GE . AdditiveExpr   (rule 50)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 185



state 131

    RelationalExpr  ->  RelationalExpr '<' . AdditiveExpr   (rule 47)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 186



state 132

    RelationalExpr  ->  RelationalExpr '>' . AdditiveExpr   (rule 48)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 187



state 133

    EqualityExpr  ->  EqualityExpr EQEQ . RelationalExpr   (rule 53)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 188



state 134

    EqualityExpr  ->  EqualityExpr NE . RelationalExpr   (rule 54)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 189



state 135

    EqualityExpr  ->  EqualityExpr STREQ . RelationalExpr   (rule 55)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 190



state 136

    EqualityExpr  ->  EqualityExpr STRNEQ . RelationalExpr   (rule 56)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 191



state 137

    LogicalANDExpr  ->  LogicalANDExpr AND_KW . EqualityExpr   (rule 58)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 192



state 138

    LogicalORExpr  ->  LogicalORExpr OR_KW . LogicalANDExpr   (rule 60)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 89
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 193



state 139

    ConditionalExpr  ->  LogicalORExpr '?' . AssignmentExpr ':' AssignmentExpr   (rule 62)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 194



state 140

    Expr  ->  Expr ',' . AssignmentExpr   (rule 72)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 195



state 141

    ExprStatement  ->  Expr ';' .   (rule 108)

    $default	reduce using rule 108 (ExprStatement)



state 142

    SourceElements  ->  SourceElements SourceElement .   (rule 148)

    $default	reduce using rule 148 (SourceElements)



state 143

    BreakStatement  ->  BREAK_KW IDENT ';' .   (rule 123)

    $default	reduce using rule 123 (BreakStatement)



state 144

    IterationStatement  ->  FOR_KW '(' VAR_KW . VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement   (rule 114)
    IterationStatement  ->  FOR_KW '(' VAR_KW . IDENT IN_KW Expr ')' Statement   (rule 116)
    IterationStatement  ->  FOR_KW '(' VAR_KW . IDENT Initializer IN_KW Expr ')' Statement   (rule 117)

    IDENT	shift, and go to state 196

    VariableDeclarationList	go to state 197
    VariableDeclaration	go to state 77



state 145

    PostfixExpr  ->  LeftHandSideExpr .   (rule 27)
    PostfixExpr  ->  LeftHandSideExpr . PLUSPLUS   (rule 28)
    PostfixExpr  ->  LeftHandSideExpr . MINUSMINUS   (rule 29)
    AssignmentExpr  ->  LeftHandSideExpr . AssignmentOperator AssignmentExpr   (rule 64)
    IterationStatement  ->  FOR_KW '(' LeftHandSideExpr . IN_KW Expr ')' Statement   (rule 115)

    IN_KW	shift, and go to state 198
    PLUSPLUS	shift, and go to state 114
    MINUSMINUS	shift, and go to state 115
    PLUSEQUAL	shift, and go to state 116
    MINUSEQUAL	shift, and go to state 117
    MULTEQUAL	shift, and go to state 118
    DIVEQUAL	shift, and go to state 119
    MODEQUAL	shift, and go to state 120
    '=' 	shift, and go to state 121

    IN_KW	[reduce using rule 27 (PostfixExpr)]
    $default	reduce using rule 27 (PostfixExpr)

    AssignmentOperator	go to state 122



state 146

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    ExprOpt  ->  Expr .   (rule 119)

    ',' 	shift, and go to state 140

    $default	reduce using rule 119 (ExprOpt)



state 147

    IterationStatement  ->  FOR_KW '(' ExprOpt . ';' ExprOpt ';' ExprOpt ')' Statement   (rule 113)

    ';' 	shift, and go to state 199



state 148

    MemberExpr  ->  NEW_KW MemberExpr Arguments .   (rule 14)

    $default	reduce using rule 14 (MemberExpr)



state 149

    Initializer  ->  '=' . AssignmentExpr   (rule 106)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 200



state 150

    VariableDeclaration  ->  IDENT Initializer .   (rule 95)

    $default	reduce using rule 95 (VariableDeclaration)



state 151

    VariableDeclarationList  ->  VariableDeclarationList ',' . VariableDeclaration   (rule 93)

    IDENT	shift, and go to state 75

    VariableDeclaration	go to state 201



state 152

    VariableStatement  ->  VAR_KW VariableDeclarationList ';' .   (rule 91)

    $default	reduce using rule 91 (VariableStatement)



state 153

    GlobalDeclaration  ->  IDENT Initializer .   (rule 100)

    $default	reduce using rule 100 (GlobalDeclaration)



state 154

    GlobalDeclarationList  ->  GlobalDeclarationList ',' . VariableDeclaration   (rule 98)

    IDENT	shift, and go to state 75

    VariableDeclaration	go to state 202



state 155

    GlobalStatement  ->  GLOBAL_KW GlobalDeclarationList ';' .   (rule 96)

    $default	reduce using rule 96 (GlobalStatement)



state 156

    ConstDeclaration  ->  IDENT Initializer .   (rule 105)

    $default	reduce using rule 105 (ConstDeclaration)



state 157

    ConstDeclarationList  ->  ConstDeclarationList ',' . VariableDeclaration   (rule 103)

    IDENT	shift, and go to state 75

    VariableDeclaration	go to state 203



state 158

    ConstStatement  ->  CONST_KW ConstDeclarationList ';' .   (rule 101)

    $default	reduce using rule 101 (ConstStatement)



state 159

    ContinueStatement  ->  CONTINUE_KW IDENT ';' .   (rule 121)

    $default	reduce using rule 121 (ContinueStatement)



state 160

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' . ')' FunctionBody   (rule 139)
    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' . FormalParameterList ')' FunctionBody   (rule 140)

    IDENT	shift, and go to state 204
    ')' 	shift, and go to state 205

    FormalParameterList	go to state 206



state 161

    ReturnStatement  ->  RETURN_KW Expr ';' .   (rule 125)

    $default	reduce using rule 125 (ReturnStatement)



state 162

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IfStatement  ->  IF_KW '(' Expr . ')' Statement   (rule 109)
    IfStatement  ->  IF_KW '(' Expr . ')' Statement ELSE_KW Statement   (rule 110)

    ')' 	shift, and go to state 207
    ',' 	shift, and go to state 140



state 163

    IterationStatement  ->  DO_KW Statement WHILE_KW . '(' Expr ')'   (rule 111)

    '(' 	shift, and go to state 208



state 164

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IterationStatement  ->  WHILE_KW '(' Expr . ')' Statement   (rule 112)

    ')' 	shift, and go to state 209
    ',' 	shift, and go to state 140



state 165

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    SwitchStatement  ->  SWITCH_KW '(' Expr . ')' CaseBlock   (rule 127)

    ')' 	shift, and go to state 210
    ',' 	shift, and go to state 140



state 166

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    WithStatement  ->  WITH_KW '(' Expr . ')' Statement   (rule 126)

    ')' 	shift, and go to state 211
    ',' 	shift, and go to state 140



state 167

    LabelledStatement  ->  IDENT ':' Statement .   (rule 138)

    $default	reduce using rule 138 (LabelledStatement)



state 168

    PrimaryExpr  ->  '(' Expr ')' .   (rule 10)

    $default	reduce using rule 10 (PrimaryExpr)



state 169

    Block  ->  '{' SourceElements '}' .   (rule 88)

    $default	reduce using rule 88 (Block)



state 170

    Arguments  ->  '(' ')' .   (rule 21)

    $default	reduce using rule 21 (Arguments)



state 171

    Arguments  ->  '(' ArgumentList . ')'   (rule 22)
    ArgumentList  ->  ArgumentList . ',' AssignmentExpr   (rule 24)

    ')' 	shift, and go to state 212
    ',' 	shift, and go to state 213



state 172

    ArgumentList  ->  AssignmentExpr .   (rule 23)

    $default	reduce using rule 23 (ArgumentList)



state 173

    MemberExpr  ->  MemberExpr '[' Expr . ']'   (rule 12)
    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)

    ']' 	shift, and go to state 214
    ',' 	shift, and go to state 140



state 174

    MemberExpr  ->  MemberExpr '.' IDENT .   (rule 13)

    $default	reduce using rule 13 (MemberExpr)



state 175

    CallExpr  ->  CallExpr '[' Expr . ']'   (rule 19)
    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)

    ']' 	shift, and go to state 215
    ',' 	shift, and go to state 140



state 176

    CallExpr  ->  CallExpr '.' IDENT .   (rule 20)

    $default	reduce using rule 20 (CallExpr)



state 177

    AssignmentExpr  ->  LeftHandSideExpr AssignmentOperator AssignmentExpr .   (rule 64)

    $default	reduce using rule 64 (AssignmentExpr)



state 178

    MultiplicativeExpr  ->  MultiplicativeExpr '*' UnaryExpr .   (rule 40)

    $default	reduce using rule 40 (MultiplicativeExpr)



state 179

    MultiplicativeExpr  ->  MultiplicativeExpr '/' UnaryExpr .   (rule 41)

    $default	reduce using rule 41 (MultiplicativeExpr)



state 180

    MultiplicativeExpr  ->  MultiplicativeExpr '%' UnaryExpr .   (rule 42)

    $default	reduce using rule 42 (MultiplicativeExpr)



state 181

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 40)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 41)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 42)
    AdditiveExpr  ->  AdditiveExpr '+' MultiplicativeExpr .   (rule 44)

    '*' 	shift, and go to state 123
    '/' 	shift, and go to state 124
    '%' 	shift, and go to state 125

    $default	reduce using rule 44 (AdditiveExpr)



state 182

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 40)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 41)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 42)
    AdditiveExpr  ->  AdditiveExpr '-' MultiplicativeExpr .   (rule 45)

    '*' 	shift, and go to state 123
    '/' 	shift, and go to state 124
    '%' 	shift, and go to state 125

    $default	reduce using rule 45 (AdditiveExpr)



state 183

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  RelationalExpr IN_KW AdditiveExpr .   (rule 51)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 51 (RelationalExpr)



state 184

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  RelationalExpr LE AdditiveExpr .   (rule 49)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 49 (RelationalExpr)



state 185

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  RelationalExpr GE AdditiveExpr .   (rule 50)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 50 (RelationalExpr)



state 186

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  RelationalExpr '<' AdditiveExpr .   (rule 47)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 47 (RelationalExpr)



state 187

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 44)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 45)
    RelationalExpr  ->  RelationalExpr '>' AdditiveExpr .   (rule 48)

    '+' 	shift, and go to state 126
    '-' 	shift, and go to state 127

    $default	reduce using rule 48 (RelationalExpr)



state 188

    RelationalExpr  ->  RelationalExpr . '<' AdditiveExpr   (rule 47)
    RelationalExpr  ->  RelationalExpr . '>' AdditiveExpr   (rule 48)
    RelationalExpr  ->  RelationalExpr . LE AdditiveExpr   (rule 49)
    RelationalExpr  ->  RelationalExpr . GE AdditiveExpr   (rule 50)
    RelationalExpr  ->  RelationalExpr . IN_KW AdditiveExpr   (rule 51)
    EqualityExpr  ->  EqualityExpr EQEQ RelationalExpr .   (rule 53)

    IN_KW	shift, and go to state 128
    LE  	shift, and go to state 129
    GE  	shift, and go to state 130
    '<' 	shift, and go to state 131
    '>' 	shift, and go to state 132

    IN_KW	[reduce using rule 53 (EqualityExpr)]
    $default	reduce using rule 53 (EqualityExpr)



state 189

    RelationalExpr  ->  RelationalExpr . '<' AdditiveExpr   (rule 47)
    RelationalExpr  ->  RelationalExpr . '>' AdditiveExpr   (rule 48)
    RelationalExpr  ->  RelationalExpr . LE AdditiveExpr   (rule 49)
    RelationalExpr  ->  RelationalExpr . GE AdditiveExpr   (rule 50)
    RelationalExpr  ->  RelationalExpr . IN_KW AdditiveExpr   (rule 51)
    EqualityExpr  ->  EqualityExpr NE RelationalExpr .   (rule 54)

    IN_KW	shift, and go to state 128
    LE  	shift, and go to state 129
    GE  	shift, and go to state 130
    '<' 	shift, and go to state 131
    '>' 	shift, and go to state 132

    IN_KW	[reduce using rule 54 (EqualityExpr)]
    $default	reduce using rule 54 (EqualityExpr)



state 190

    RelationalExpr  ->  RelationalExpr . '<' AdditiveExpr   (rule 47)
    RelationalExpr  ->  RelationalExpr . '>' AdditiveExpr   (rule 48)
    RelationalExpr  ->  RelationalExpr . LE AdditiveExpr   (rule 49)
    RelationalExpr  ->  RelationalExpr . GE AdditiveExpr   (rule 50)
    RelationalExpr  ->  RelationalExpr . IN_KW AdditiveExpr   (rule 51)
    EqualityExpr  ->  EqualityExpr STREQ RelationalExpr .   (rule 55)

    IN_KW	shift, and go to state 128
    LE  	shift, and go to state 129
    GE  	shift, and go to state 130
    '<' 	shift, and go to state 131
    '>' 	shift, and go to state 132

    IN_KW	[reduce using rule 55 (EqualityExpr)]
    $default	reduce using rule 55 (EqualityExpr)



state 191

    RelationalExpr  ->  RelationalExpr . '<' AdditiveExpr   (rule 47)
    RelationalExpr  ->  RelationalExpr . '>' AdditiveExpr   (rule 48)
    RelationalExpr  ->  RelationalExpr . LE AdditiveExpr   (rule 49)
    RelationalExpr  ->  RelationalExpr . GE AdditiveExpr   (rule 50)
    RelationalExpr  ->  RelationalExpr . IN_KW AdditiveExpr   (rule 51)
    EqualityExpr  ->  EqualityExpr STRNEQ RelationalExpr .   (rule 56)

    IN_KW	shift, and go to state 128
    LE  	shift, and go to state 129
    GE  	shift, and go to state 130
    '<' 	shift, and go to state 131
    '>' 	shift, and go to state 132

    IN_KW	[reduce using rule 56 (EqualityExpr)]
    $default	reduce using rule 56 (EqualityExpr)



state 192

    EqualityExpr  ->  EqualityExpr . EQEQ RelationalExpr   (rule 53)
    EqualityExpr  ->  EqualityExpr . NE RelationalExpr   (rule 54)
    EqualityExpr  ->  EqualityExpr . STREQ RelationalExpr   (rule 55)
    EqualityExpr  ->  EqualityExpr . STRNEQ RelationalExpr   (rule 56)
    LogicalANDExpr  ->  LogicalANDExpr AND_KW EqualityExpr .   (rule 58)

    EQEQ	shift, and go to state 133
    NE  	shift, and go to state 134
    STREQ	shift, and go to state 135
    STRNEQ	shift, and go to state 136

    $default	reduce using rule 58 (LogicalANDExpr)



state 193

    LogicalANDExpr  ->  LogicalANDExpr . AND_KW EqualityExpr   (rule 58)
    LogicalORExpr  ->  LogicalORExpr OR_KW LogicalANDExpr .   (rule 60)

    AND_KW	shift, and go to state 137

    $default	reduce using rule 60 (LogicalORExpr)



state 194

    ConditionalExpr  ->  LogicalORExpr '?' AssignmentExpr . ':' AssignmentExpr   (rule 62)

    ':' 	shift, and go to state 216



state 195

    Expr  ->  Expr ',' AssignmentExpr .   (rule 72)

    $default	reduce using rule 72 (Expr)



state 196

    VariableDeclaration  ->  IDENT .   (rule 94)
    VariableDeclaration  ->  IDENT . Initializer   (rule 95)
    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT . IN_KW Expr ')' Statement   (rule 116)
    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT . Initializer IN_KW Expr ')' Statement   (rule 117)

    IN_KW	shift, and go to state 217
    '=' 	shift, and go to state 149

    $default	reduce using rule 94 (VariableDeclaration)

    Initializer	go to state 218



state 197

    VariableDeclarationList  ->  VariableDeclarationList . ',' VariableDeclaration   (rule 93)
    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList . ';' ExprOpt ';' ExprOpt ')' Statement   (rule 114)

    ',' 	shift, and go to state 151
    ';' 	shift, and go to state 219



state 198

    IterationStatement  ->  FOR_KW '(' LeftHandSideExpr IN_KW . Expr ')' Statement   (rule 115)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 220



state 199

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' . ExprOpt ';' ExprOpt ')' Statement   (rule 113)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    $default	reduce using rule 118 (ExprOpt)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 146
    ExprOpt	go to state 221



state 200

    Initializer  ->  '=' AssignmentExpr .   (rule 106)

    $default	reduce using rule 106 (Initializer)



state 201

    VariableDeclarationList  ->  VariableDeclarationList ',' VariableDeclaration .   (rule 93)

    $default	reduce using rule 93 (VariableDeclarationList)



state 202

    GlobalDeclarationList  ->  GlobalDeclarationList ',' VariableDeclaration .   (rule 98)

    $default	reduce using rule 98 (GlobalDeclarationList)



state 203

    ConstDeclarationList  ->  ConstDeclarationList ',' VariableDeclaration .   (rule 103)

    $default	reduce using rule 103 (ConstDeclarationList)



state 204

    FormalParameterList  ->  IDENT .   (rule 141)

    $default	reduce using rule 141 (FormalParameterList)



state 205

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' ')' . FunctionBody   (rule 139)

    '{' 	shift, and go to state 222

    FunctionBody	go to state 223



state 206

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' FormalParameterList . ')' FunctionBody   (rule 140)
    FormalParameterList  ->  FormalParameterList . ',' IDENT   (rule 142)

    ')' 	shift, and go to state 224
    ',' 	shift, and go to state 225



state 207

    IfStatement  ->  IF_KW '(' Expr ')' . Statement   (rule 109)
    IfStatement  ->  IF_KW '(' Expr ')' . Statement ELSE_KW Statement   (rule 110)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 226
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 208

    IterationStatement  ->  DO_KW Statement WHILE_KW '(' . Expr ')'   (rule 111)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 227



state 209

    IterationStatement  ->  WHILE_KW '(' Expr ')' . Statement   (rule 112)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 228
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 210

    SwitchStatement  ->  SWITCH_KW '(' Expr ')' . CaseBlock   (rule 127)

    '{' 	shift, and go to state 229

    CaseBlock	go to state 230



state 211

    WithStatement  ->  WITH_KW '(' Expr ')' . Statement   (rule 126)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 231
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 212

    Arguments  ->  '(' ArgumentList ')' .   (rule 22)

    $default	reduce using rule 22 (Arguments)



state 213

    ArgumentList  ->  ArgumentList ',' . AssignmentExpr   (rule 24)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 232



state 214

    MemberExpr  ->  MemberExpr '[' Expr ']' .   (rule 12)

    $default	reduce using rule 12 (MemberExpr)



state 215

    CallExpr  ->  CallExpr '[' Expr ']' .   (rule 19)

    $default	reduce using rule 19 (CallExpr)



state 216

    ConditionalExpr  ->  LogicalORExpr '?' AssignmentExpr ':' . AssignmentExpr   (rule 62)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 233



state 217

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT IN_KW . Expr ')' Statement   (rule 116)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 234



state 218

    VariableDeclaration  ->  IDENT Initializer .   (rule 95)
    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT Initializer . IN_KW Expr ')' Statement   (rule 117)

    IN_KW	shift, and go to state 235

    $default	reduce using rule 95 (VariableDeclaration)



state 219

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' . ExprOpt ';' ExprOpt ')' Statement   (rule 114)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    $default	reduce using rule 118 (ExprOpt)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 146
    ExprOpt	go to state 236



state 220

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IterationStatement  ->  FOR_KW '(' LeftHandSideExpr IN_KW Expr . ')' Statement   (rule 115)

    ')' 	shift, and go to state 237
    ',' 	shift, and go to state 140



state 221

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' ExprOpt . ';' ExprOpt ')' Statement   (rule 113)

    ';' 	shift, and go to state 238



state 222

    FunctionBody  ->  '{' . '}'   (rule 143)
    FunctionBody  ->  '{' . SourceElements '}'   (rule 144)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    '}' 	shift, and go to state 239
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    SourceElements	go to state 240
    SourceElement	go to state 68



state 223

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' ')' FunctionBody .   (rule 139)

    $default	reduce using rule 139 (FunctionDeclaration)



state 224

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' FormalParameterList ')' . FunctionBody   (rule 140)

    '{' 	shift, and go to state 222

    FunctionBody	go to state 241



state 225

    FormalParameterList  ->  FormalParameterList ',' . IDENT   (rule 142)

    IDENT	shift, and go to state 242



state 226

    IfStatement  ->  IF_KW '(' Expr ')' Statement .   (rule 109)
    IfStatement  ->  IF_KW '(' Expr ')' Statement . ELSE_KW Statement   (rule 110)

    ELSE_KW	shift, and go to state 243

    ELSE_KW	[reduce using rule 109 (IfStatement)]
    $default	reduce using rule 109 (IfStatement)



state 227

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IterationStatement  ->  DO_KW Statement WHILE_KW '(' Expr . ')'   (rule 111)

    ')' 	shift, and go to state 244
    ',' 	shift, and go to state 140



state 228

    IterationStatement  ->  WHILE_KW '(' Expr ')' Statement .   (rule 112)

    $default	reduce using rule 112 (IterationStatement)



state 229

    CaseBlock  ->  '{' . CaseClausesOpt '}'   (rule 128)
    CaseBlock  ->  '{' . CaseClausesOpt DefaultClause CaseClausesOpt '}'   (rule 129)

    CASE_KW	shift, and go to state 245

    $default	reduce using rule 130 (CaseClausesOpt)

    CaseClausesOpt	go to state 246
    CaseClauses	go to state 247
    CaseClause	go to state 248



state 230

    SwitchStatement  ->  SWITCH_KW '(' Expr ')' CaseBlock .   (rule 127)

    $default	reduce using rule 127 (SwitchStatement)



state 231

    WithStatement  ->  WITH_KW '(' Expr ')' Statement .   (rule 126)

    $default	reduce using rule 126 (WithStatement)



state 232

    ArgumentList  ->  ArgumentList ',' AssignmentExpr .   (rule 24)

    $default	reduce using rule 24 (ArgumentList)



state 233

    ConditionalExpr  ->  LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr .   (rule 62)

    $default	reduce using rule 62 (ConditionalExpr)



state 234

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT IN_KW Expr . ')' Statement   (rule 116)

    ')' 	shift, and go to state 249
    ',' 	shift, and go to state 140



state 235

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT Initializer IN_KW . Expr ')' Statement   (rule 117)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 250



state 236

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt . ';' ExprOpt ')' Statement   (rule 114)

    ';' 	shift, and go to state 251



state 237

    IterationStatement  ->  FOR_KW '(' LeftHandSideExpr IN_KW Expr ')' . Statement   (rule 115)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 252
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 238

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' ExprOpt ';' . ExprOpt ')' Statement   (rule 113)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    $default	reduce using rule 118 (ExprOpt)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 146
    ExprOpt	go to state 253



state 239

    FunctionBody  ->  '{' '}' .   (rule 143)

    $default	reduce using rule 143 (FunctionBody)



state 240

    FunctionBody  ->  '{' SourceElements . '}'   (rule 144)
    SourceElements  ->  SourceElements . SourceElement   (rule 148)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    FUNCTION_KW	shift, and go to state 14
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    '}' 	shift, and go to state 254
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 51
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65
    FunctionDeclaration	go to state 66
    SourceElement	go to state 142



state 241

    FunctionDeclaration  ->  FUNCTION_KW IDENT '(' FormalParameterList ')' FunctionBody .   (rule 140)

    $default	reduce using rule 140 (FunctionDeclaration)



state 242

    FormalParameterList  ->  FormalParameterList ',' IDENT .   (rule 142)

    $default	reduce using rule 142 (FormalParameterList)



state 243

    IfStatement  ->  IF_KW '(' Expr ')' Statement ELSE_KW . Statement   (rule 110)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 255
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 244

    IterationStatement  ->  DO_KW Statement WHILE_KW '(' Expr ')' .   (rule 111)

    $default	reduce using rule 111 (IterationStatement)



state 245

    CaseClause  ->  CASE_KW . Expr ':'   (rule 134)
    CaseClause  ->  CASE_KW . Expr ':' StatementList   (rule 135)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 256



state 246

    CaseBlock  ->  '{' CaseClausesOpt . '}'   (rule 128)
    CaseBlock  ->  '{' CaseClausesOpt . DefaultClause CaseClausesOpt '}'   (rule 129)

    DEFAULT_KW	shift, and go to state 257
    '}' 	shift, and go to state 258

    DefaultClause	go to state 259



state 247

    CaseClausesOpt  ->  CaseClauses .   (rule 131)
    CaseClauses  ->  CaseClauses . CaseClause   (rule 133)

    CASE_KW	shift, and go to state 245

    $default	reduce using rule 131 (CaseClausesOpt)

    CaseClause	go to state 260



state 248

    CaseClauses  ->  CaseClause .   (rule 132)

    $default	reduce using rule 132 (CaseClauses)



state 249

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT IN_KW Expr ')' . Statement   (rule 116)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 261
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 250

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT Initializer IN_KW Expr . ')' Statement   (rule 117)

    ')' 	shift, and go to state 262
    ',' 	shift, and go to state 140



state 251

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' . ExprOpt ')' Statement   (rule 114)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    NEW_KW	shift, and go to state 9
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 19
    TYPEOF_KW	shift, and go to state 22
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 72
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31

    $default	reduce using rule 118 (ExprOpt)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 146
    ExprOpt	go to state 263



state 252

    IterationStatement  ->  FOR_KW '(' LeftHandSideExpr IN_KW Expr ')' Statement .   (rule 115)

    $default	reduce using rule 115 (IterationStatement)



state 253

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' ExprOpt ';' ExprOpt . ')' Statement   (rule 113)

    ')' 	shift, and go to state 264



state 254

    FunctionBody  ->  '{' SourceElements '}' .   (rule 144)

    $default	reduce using rule 144 (FunctionBody)



state 255

    IfStatement  ->  IF_KW '(' Expr ')' Statement ELSE_KW Statement .   (rule 110)

    $default	reduce using rule 110 (IfStatement)



state 256

    Expr  ->  Expr . ',' AssignmentExpr   (rule 72)
    CaseClause  ->  CASE_KW Expr . ':'   (rule 134)
    CaseClause  ->  CASE_KW Expr . ':' StatementList   (rule 135)

    ',' 	shift, and go to state 140
    ':' 	shift, and go to state 265



state 257

    DefaultClause  ->  DEFAULT_KW . ':'   (rule 136)
    DefaultClause  ->  DEFAULT_KW . ':' StatementList   (rule 137)

    ':' 	shift, and go to state 266



state 258

    CaseBlock  ->  '{' CaseClausesOpt '}' .   (rule 128)

    $default	reduce using rule 128 (CaseBlock)



state 259

    CaseBlock  ->  '{' CaseClausesOpt DefaultClause . CaseClausesOpt '}'   (rule 129)

    CASE_KW	shift, and go to state 245

    $default	reduce using rule 130 (CaseClausesOpt)

    CaseClausesOpt	go to state 267
    CaseClauses	go to state 247
    CaseClause	go to state 248



state 260

    CaseClauses  ->  CaseClauses CaseClause .   (rule 133)

    $default	reduce using rule 133 (CaseClauses)



state 261

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT IN_KW Expr ')' Statement .   (rule 116)

    $default	reduce using rule 116 (IterationStatement)



state 262

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT Initializer IN_KW Expr ')' . Statement   (rule 117)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 268
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 263

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt . ')' Statement   (rule 114)

    ')' 	shift, and go to state 269



state 264

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' . Statement   (rule 113)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 270
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 265

    CaseClause  ->  CASE_KW Expr ':' .   (rule 134)
    CaseClause  ->  CASE_KW Expr ':' . StatementList   (rule 135)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 134 (CaseClause)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 271
    Block	go to state 52
    StatementList	go to state 272
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 266

    DefaultClause  ->  DEFAULT_KW ':' .   (rule 136)
    DefaultClause  ->  DEFAULT_KW ':' . StatementList   (rule 137)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 136 (DefaultClause)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 271
    Block	go to state 52
    StatementList	go to state 273
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 267

    CaseBlock  ->  '{' CaseClausesOpt DefaultClause CaseClausesOpt . '}'   (rule 129)

    '}' 	shift, and go to state 274



state 268

    IterationStatement  ->  FOR_KW '(' VAR_KW IDENT Initializer IN_KW Expr ')' Statement .   (rule 117)

    $default	reduce using rule 117 (IterationStatement)



state 269

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' . Statement   (rule 114)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 275
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 270

    IterationStatement  ->  FOR_KW '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement .   (rule 113)

    $default	reduce using rule 113 (IterationStatement)



state 271

    StatementList  ->  Statement .   (rule 89)

    $default	reduce using rule 89 (StatementList)



state 272

    StatementList  ->  StatementList . Statement   (rule 90)
    CaseClause  ->  CASE_KW Expr ':' StatementList .   (rule 135)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 135 (CaseClause)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 276
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 273

    StatementList  ->  StatementList . Statement   (rule 90)
    DefaultClause  ->  DEFAULT_KW ':' StatementList .   (rule 137)

    NULL_KW	shift, and go to state 1
    TRUE_KW	shift, and go to state 2
    FALSE_KW	shift, and go to state 3
    STRING	shift, and go to state 4
    NUMBER_INT	shift, and go to state 5
    NUMBER_FLOAT	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    FOR_KW	shift, and go to state 8
    NEW_KW	shift, and go to state 9
    VAR_KW	shift, and go to state 10
    GLOBAL_KW	shift, and go to state 11
    CONST_KW	shift, and go to state 12
    CONTINUE_KW	shift, and go to state 13
    RETURN_KW	shift, and go to state 15
    VOID_KW	shift, and go to state 16
    DELETE_KW	shift, and go to state 17
    IF_KW	shift, and go to state 18
    THIS_KW	shift, and go to state 19
    DO_KW	shift, and go to state 20
    WHILE_KW	shift, and go to state 21
    TYPEOF_KW	shift, and go to state 22
    SWITCH_KW	shift, and go to state 23
    WITH_KW	shift, and go to state 24
    PLUSPLUS	shift, and go to state 25
    MINUSMINUS	shift, and go to state 26
    IDENT	shift, and go to state 27
    '(' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 31
    '{' 	shift, and go to state 32
    ';' 	shift, and go to state 33

    $default	reduce using rule 137 (DefaultClause)

    Literal	go to state 34
    PrimaryExpr	go to state 35
    MemberExpr	go to state 36
    NewExpr	go to state 37
    CallExpr	go to state 38
    LeftHandSideExpr	go to state 39
    PostfixExpr	go to state 40
    UnaryExpr	go to state 41
    MultiplicativeExpr	go to state 42
    AdditiveExpr	go to state 43
    RelationalExpr	go to state 44
    EqualityExpr	go to state 45
    LogicalANDExpr	go to state 46
    LogicalORExpr	go to state 47
    ConditionalExpr	go to state 48
    AssignmentExpr	go to state 49
    Expr	go to state 50
    Statement	go to state 276
    Block	go to state 52
    VariableStatement	go to state 53
    GlobalStatement	go to state 54
    ConstStatement	go to state 55
    EmptyStatement	go to state 56
    ExprStatement	go to state 57
    IfStatement	go to state 58
    IterationStatement	go to state 59
    ContinueStatement	go to state 60
    BreakStatement	go to state 61
    ReturnStatement	go to state 62
    WithStatement	go to state 63
    SwitchStatement	go to state 64
    LabelledStatement	go to state 65



state 274

    CaseBlock  ->  '{' CaseClausesOpt DefaultClause CaseClausesOpt '}' .   (rule 129)

    $default	reduce using rule 129 (CaseBlock)



state 275

    IterationStatement  ->  FOR_KW '(' VAR_KW VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement .   (rule 114)

    $default	reduce using rule 114 (IterationStatement)



state 276

    StatementList  ->  StatementList Statement .   (rule 90)

    $default	reduce using rule 90 (StatementList)



state 277

    $   	go to state 278



state 278

    $   	go to state 279



state 279

    $default	accept
